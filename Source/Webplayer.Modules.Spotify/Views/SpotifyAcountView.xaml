<UserControl x:Class="Webplayer.Modules.Spotify.Views.SpotifyAcountView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Webplayer.Modules.Spotify.Views"
             xmlns:spotify="clr-namespace:Webplayer.Modules.Spotify"
             xmlns:models="clr-namespace:Webplayer.Modules.Spotify.Models"
             xmlns:inf="clr-namespace:Infrastructure;assembly=Infrastructure"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mvvm="http://prismlibrary.com/"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mvvm:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d" Name="View"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <spotify:VisibilityConverterd x:Key="vc" />
    </UserControl.Resources>
    <Grid>
        
        <!--connect view -->
        <Grid Visibility="{Binding ApiConnected, Converter={StaticResource vc}}">
            <Button Command="{Binding TryConnectApiCommand}" Content="Connect" />
        </Grid>
        
        <!--main view-->
        <Grid Visibility="{Binding ApiConnected, Converter={StaticResource vc}, 
            ConverterParameter={x:Static spotify:VisibilityConverterd.Inverted}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>
            <ListView ItemsSource="{Binding Playlists}" SelectedItem="{Binding SelectedPlaylist}">
                <ListView.ItemTemplate>
                    <DataTemplate DataType="{x:Type models:SpotifyPlaylist}">
                        <StackPanel Orientation="Horizontal">
                            <Label Content="{Binding Name}"></Label>
                        </StackPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <ListView Grid.Column="1" ItemsSource="{Binding PlayListSongs}" SelectedItem="{Binding SelectedPlaylistSong}">
                <i:Interaction.Triggers>
                    <!-- This event trigger will execute the action when the corresponding event is raised by the ListBox. -->
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <!-- This action will invoke the selected command in the view model and pass the parameters of the event to it. -->
                        <prism:InvokeCommandAction Command="{Binding DataContext.AddSongCommand, ElementName=View}"   />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ListView>
        </Grid>
        
        <!-- allways visible view-->
        <StackPanel Orientation="Horizontal" 
                    HorizontalAlignment="Right" VerticalAlignment="Bottom"
                Margin="4 0 18 6">
            <Button Margin="4" Style="{StaticResource MaterialDesignFloatingActionButton}" 
                   Command="{Binding ShowSearchCommand}" ToolTip="Show Search">
                <materialDesign:PackIcon Kind="Magnify" Height="24" Width="24"/>
            </Button>
        </StackPanel>
    </Grid>
</UserControl>
